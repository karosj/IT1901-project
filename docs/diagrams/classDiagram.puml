@startuml ScheduleLog
package schedulelog {
  package core {
    class Activity {
      - subjects: List<Subject>
      - startTime: LocalDateTime
      - endTime: LocalDateTime
      - description: String
      + Activity()
      + Activity(List<Subject>, LocalDateTime, LocalDateTime, String)
      + validateInput(List<Subject>, LocalDateTime, LocalDateTime, String): void
      + addSubject(Subject): void
      + removeSubject(Subject): void
      + getSubjects(): List<Subject>
      + getStartTime(): LocalDateTime
      + getEndTime(): LocalDateTime
      + getDescription(): String
      + toString(): String
    }

    class Courses {
      - courseMap: Map<String, String>
      + Courses()
      + Courses(List<String>, List<String>)
      + getCourseName(String): String
      + addCourse(String, String): void
      + removeCourse(String): void
      + toString(): String
      + getCourses(): Map<String, String>
    }

    class Subject {
      - code: String
      - name: String
      - courses: Courses
      + Subject()
      + Subject(String, Courses)
      + getCode(): String
      + getName(): String
      + resetName(): void
      + toString(): String
    }
  }

  package json {
    class FileStorage {
      - FILE_NAME: String
      + getActivities(): List<Activity>
      + getActivitiesJSON(): String
      + addActivity(Activity): void
      - getConfiguredMapper(): ObjectMapper
    }

    class RestConsumer {
      - mapper: ObjectMapper
      + RestConsumer()
      + getActivities(): List<Activity>
      + addActivity(Activity): void
      - getConfiguredMapper(): ObjectMapper
    }
  }

  package rest {
    class Controller {
      - fileStorage: FileStorage
      - courses: Courses
      + Controller()
      + Activities(): String
      + addActivity(Activity): ResponseEntity<String>
    }

    class RestApplication {
      + main(String[]): void
    }
  }

  package ui {
    class App extends Application {
      + start(Stage): void
      + main(String[]): void
    }

    class AppController {
      - activities: List<Activity>
      - restConsumer: RestConsumer
      - courses: Courses
      + AppController()
      + initialize(): void
      + setActivitiesList(List<Activity>): void
      + refreshActivitiesList(): void
      + handleAddActivity(): void
      + clearInputs(): void
      + showAlert(String, String): void
    }
  }
}
@enduml
